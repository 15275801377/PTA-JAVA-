# PTA-JAVA-
JAVA平时作业
7-8 银行业务队列简单模拟 (25分)
设某银行有A、B两个业务窗口，且处理业务的速度不一样，其中A窗口处理速度是B窗口的2倍 —— 即当A窗口每处理完2个顾客时，B窗口处理完1个顾客。给定到达银行的顾客序列，请按业务完成的顺序输出顾客序列。假定不考虑顾客先后到达的时间间隔，并且当不同窗口同时处理完2个顾客时，A窗口顾客优先输出。

输入格式:
输入为一行正整数，其中第1个数字N(≤1000)为顾客总数，后面跟着N位顾客的编号。编号为奇数的顾客需要到A窗口办理业务，为偶数的顾客则去B窗口。数字间以空格分隔。

输出格式:
按业务处理完成的顺序输出顾客的编号。数字间以空格分隔，但最后一个编号后不能有多余的空格。

输入样例:
8 2 1 3 9 4 11 13 15
输出样例:
1 3 2 9 11 4 13 15
作者
DS课程组
单位
浙江大学
代码长度限制
16 KB
时间限制
400 ms
内存限制
64 MB
Java (javac 1.8.0)
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int a[] = new int[1001];
		int b[] = new int[1001];
		int n, t = 0, flag = 0;
		n = scanner.nextInt();
		for (int i = 0; i < n; i++) {
			a[i] = scanner.nextInt();
		}
		for (int i = 0; i < n; i++) {
			if (a[i] == -1) {

			} else if (a[i] % 2 == 0) {
				flag = 0;
				for (int j = i + 1; j < n; j++) {
					if (flag == 2) {
						break;
					}
					if (a[j] == -1) {

					} else {
						if (a[j] % 2 == 1) {
							b[t++] = a[j];
							a[j] = -1;
							flag++;
						}

					}
				}
				b[t++] = a[i];
			} else {
				b[t++] = a[i];
				a[i] = -1;
				for (int j = i + 1; j < n; j++) {
					if (a[j] == -1) {

					} else if (a[j] % 2 == 1) {
						b[t++] = a[j];
						a[j] = -1;
						break;
					}
				}
				for (int j = i + 1; j < n; j++) {
					if (a[j] == -1) {

					} else if (a[j] % 2 == 0) {
						b[t++] = a[j];
						a[j] = -1;
						break;
					}
				}
			}
		}
		for (int i = 0; i < t - 1; i++)
			System.out.printf("%d ", b[i]);
		System.out.printf("%d", b[t - 1]);
	}
}

