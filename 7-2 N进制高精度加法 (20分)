7-2 N进制高精度加法 (20分)
到底应该怎样理解进制呢？首先得有“一个”的数量概念，然后就是这样的：
把用来表示数量的符号依次排列，例如： q w e r
然后定义最前面的符号为“零”，即“没有”，后面的符号表示的数量依次比前一个符号多“一个”
进制就这样产生了： 例如当我们数数，依次数到 q w e r ，再往后数一个，符号不够用了，那么就写成 wq
并且，我们把这种进制命名为“wq”进制。
感觉怪异吗？ 那么请换成我们熟悉的所谓“10”进制看看：
我们的用于表示数量的符号依次是： 0 1 2 3 4 5 6 7 8 9 ， 当数到9，再往后数“一个”时，就数到了 10
看这幅漫画（来源于网络），看看能不能理解“进制”的概念？ base10.jpg
现在，给定表示数量的符号（这些符号就形成了某种进制），以及该种进制下的两个不超过100位的正整数，请计算两数之和。

输入格式:
第一行给定表示数量的符号，每个符号为一个字符、各不相同且中间没有空格，最多有30个符号且符号的可能范围是：数字0-9、大小写字母、!、@、#、$、%、^、&、*、(、)
接下来两行每行给出一个该进制下的不超过100位的正整数

输出格式:
在一行中输出该进制下的两数之和。

输入样例1:
0123456789
123
12
输出样例1:
135
输入样例2:
abcd
bcd
bc
输出样例2:
cab
作者
周强
单位
青岛大学
代码长度限制
16 KB
时间限制
400 ms
内存限制
64 MB
Java (javac 1.8.0)
21
                }
22
            }
23
        }
24
//      System.out.println();
25
        for(int i=0;i<bi;i++) {
26
            for(int j=0;j<si;j++) {
27
                if(b.charAt(i)==s.charAt(j)) {
28
                    bp[i]=j;
29
//                  System.out.printf("%d ",j);
30
                    break;
31
                }
32
            }
33
        }
34
//      System.out.println();
35
        int aa=ai-1,bb=bi-1,cp[]=new int [101],max=ai;
36
        if(bi>max)max=bi;
37
        max--;
38
        int max0=max;
39
        while(aa>=0&&bb>=0) {
40
            cp[max--]=ap[aa--]+bp[bb--];
41
        }
42
        while(aa>=0) {
43
            cp[max--]=ap[aa--];
44
        }
45
        while(bb>=0) {
46
            cp[max--]=bp[bb--];
47
        }
48
//      for(int i=0;i<=max0;i++)System.out.printf("%d ",cp[i]);
49
//      System.out.println();
50
        int n=si;
51
        for(int i=max0;i>0;i--) {
52
            if(cp[i]>=n) {
53
                int x,y;
54
                y=cp[i]%n;
55
                x=cp[i]/n;
56
                cp[i-1]+=x;
57
                cp[i]=y;
58
            }
59
        }
60
        
61
//      for(int i=0;i<=max0;i++)System.out.printf("%d ",cp[i]);
62
//      System.out.println();
63
        int x;
64
        if(cp[0]>=n) {
65
            x=cp[0]/n;
66
            cp[0]%=n;
67
            System.out.printf("%c",s.charAt(x));
68
        }
69
        for(int i=0;i<=max0;i++) {
70
            System.out.printf("%c",s.charAt(cp[i]));
71
        }
72
        sc.close();
73
    }
74
}


